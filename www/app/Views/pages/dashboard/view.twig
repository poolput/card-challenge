{% extends "layout/index.html" %}
{% block head %}
{{ parent() }}
 
{% endblock %}
{% block content %}

<div class="pcoded-content">
	<div class="pcoded-inner-content">
		<!-- Main-body start -->
		<div class="main-body">
			<div class="page-wrapper">
				<div class="page-body">
					<!-- row start -->
					<div class="row mb-5 pl-3 pr-3">
						<div class="col-xl-9 col-md-12 h6 mb-5">
							<span class="pr-1">Click:</span> <span class="font-weight-bold blu-click">0</span>
							<span class="pr-1 pl-3">My Best:</span><span class="font-weight-bold blu-my-best">0</span>
							<span class="pr-1 pl-3">Global Best:</span><span class="font-weight-bold blu-global-best">0</span>
						</div>
						<div class="col-xl-3 col-md-12 text-right">
							<button class="btn btn-primary btn-block p-t-15 p-b-15 " onclick="fnService.setNewGame();">New Game</button>
						</div>
					</div>
					<div class="row card-body">
						{% for i in 0..11 %}
						<div class="col-xl-3 col-md-6">
							<div class="card">
								<div class="card-block" onclick="fnService.setClick({{ i }});">
									<div class="row m-l-0">
										<div class="col-auto card-item text-center w-100" >
											 <p class="h2 p-5 card-item-number">
											 	<!-- Number -->
											 </p>
										</div>
									</div>
								</div>
							</div>
						</div>
						{% endfor %}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

{% endblock %}
{% block footer %}
{{ parent() }}

<script>
var fnService = {

	card : document.getElementsByClassName("card-body"),
	ele_btn_newgame : document.getElementsByClassName("btn-new-game"),
	ele_card : document.getElementsByClassName("card-item-number"),
	ele_click : document.getElementsByClassName("blu-click"),
	ele_my_best : document.getElementsByClassName("blu-my-best"),
	ele_global_best : document.getElementsByClassName("blu-global-best"),
	token : '{{ token }}',
	key_after : 0,
	key_before : 0,
	value_after : 0,
	value_before : 0,
	key_display : [],
	number_display : [],
	
	setNewGame: function() {
		fnService.card[0].style.display = 'none';
		
		var request = new XMLHttpRequest();
        request.open('GET', '{{ base_url }}/set-new-game/'+ fnService.token);
        request.onreadystatechange = function() {
          if(request.readyState === XMLHttpRequest.DONE && request.status === 200) {
                fnService.card[0].style.display = '';
            }
        }
        request.send();
        
        for (var i=0; i<fnService.ele_card.length; i++) {
            fnService.ele_card[i].innerHTML = '';
        }
        fnService.ele_click[0].innerHTML = 0;
	},	
	
	setClick: function(index){
		if(fnService.key_display.length == 12){
			alert('Game Over');
		}else{
        
            var request = new XMLHttpRequest();
            request.open('GET', '{{ base_url }}/get-card-number/'+ fnService.token+'/'+ index);
            request.onreadystatechange = function() {
                  if(request.readyState === XMLHttpRequest.DONE && request.status === 200) {
              			var data = JSON.parse(request.responseText);
                
                        if(fnService.key_before){
                			if(fnService.key_after){
                				fnService.key_before = fnService.key_after;
                				fnService.value_before = fnService.value_after;
                			} 
                			fnService.key_after = index;
                			fnService.value_after = data.number;
                		}else{
                			fnService.key_before = index;
                			fnService.value_before = data.number;
                		}
                		
                		if(fnService.value_before == fnService.value_after){
                			fnService.number_display.push(fnService.value_before);
                			fnService.number_display.push(fnService.value_after);
                			fnService.key_display.push(fnService.key_before);
                			fnService.key_display.push(fnService.key_after);
                			
                			fnService.key_before = '';
                			fnService.key_after = '';
                			fnService.value_before = '';
                			fnService.value_after = '';
                		}else{
                    		for (var i=0; i < 12; i++) {
                    			var is_has = fnService.key_display.includes(i);
                    			if(is_has == false){
                    				fnService.ele_card[i].innerHTML = '';
                    			}
                            }
                		}
                		
                		fnService.ele_card[index].innerHTML = data.number;
                  }  
            };
            request.send();
            
            var click = fnService.ele_click[0].innerHTML;
            fnService.ele_click[0].innerHTML = Number(click)+1;
            console.log(fnService.key_display.length);
            if(fnService.key_display.length == 12){
            	//save score
	            var request = new XMLHttpRequest();
                request.open('GET', '{{ base_url }}/set-score/'+ fnService.token+'/'+ click);
                request.onreadystatechange = function() {
                      if(request.readyState === XMLHttpRequest.DONE && request.status === 200) {
                    		fnService.getMyBest();
 							fnService.getGlobalBest();
                      }  
                };
                request.send();
            }
        }
	},
	
	getMyBest: function(){
        
        var request = new XMLHttpRequest();
        request.open('GET', '{{ base_url }}/get-my-best/'+ fnService.token);
        request.onreadystatechange = function() {
          if(request.readyState === XMLHttpRequest.DONE && request.status === 200) {
          	var data = JSON.parse(request.responseText);
            fnService.ele_my_best[0].innerHTML = data.score;
          }  
        };
        request.send();
	},
	
	getGlobalBest: function(){
        
        var request = new XMLHttpRequest();
        request.open('GET', '{{ base_url }}/get-global-best/'+ fnService.token);
        request.onreadystatechange = function() {
          if(request.readyState === XMLHttpRequest.DONE && request.status === 200) {
          	var data = JSON.parse(request.responseText);
            fnService.ele_global_best[0].innerHTML = data.score;
          }  
        };
        request.send();
	},
	
	init : function(){
 		fnService.setNewGame();
 		fnService.getMyBest();
 		fnService.getGlobalBest();
	}
}

fnService.init();
</script>

{% endblock %}